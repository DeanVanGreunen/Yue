{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Liu\\\\frontend\\\\app\\\\src\\\\pages\\\\dashboard.js\";\nimport React, { createRef, forwardRef } from \"react\";\nimport API from \"./../service/api\";\nimport './dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n    this.openQuestion = this.openQuestion.bind(this);\n  }\n\n  openQuestion(e) {}\n\n  render() {\n    // HTML\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#FFF'\n          },\n          children: \"Welcome, Here are questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_question\",\n        children: \"Create new Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_list\",\n        children: [this.state.questions.map((question, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"question-id\": question.id,\n              onClick: this.openQuestion,\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 80\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 36\n          }, this);\n        }), this.state.questions.length == 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Questions avaliable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 60\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/Liu/frontend/app/src/pages/dashboard.js"],"names":["React","createRef","forwardRef","API","DashboardPage","Component","constructor","props","state","questions","openQuestion","bind","e","render","color","map","question","index","title","id","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,iBAAP;;;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAG,CAEd;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,mBAEQ,KAAKN,KAAL,CAAWC,SAAX,CAAqBM,GAArB,CAAyB,CAACC,QAAD,EAAWC,KAAX,KAAmB;AACxC,8BAAO;AAAA,oCAAiB;AAAA,wBAAMD,QAAQ,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,oBAAjB,eAA4C;AAAQ,6BAAaF,QAAQ,CAACG,EAA9B;AAAkC,cAAA,OAAO,EAAE,KAAKT,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5C;AAAA,aAAUO,KAAV;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD,CAFR,EAOQ,KAAKT,KAAL,CAAWC,SAAX,CAAqBW,MAArB,IAA+B,CAA/B,gBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnC,gBAAyE,qCAPjF;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBD;;AAlCoD","sourcesContent":["import React, { createRef, forwardRef } from \"react\";\r\n\r\nimport API from \"./../service/api\";\r\n\r\nimport './dashboard.css';\r\n\r\nexport default class DashboardPage extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          questions: []\r\n      };\r\n\r\n      this.openQuestion = this.openQuestion.bind(this);\r\n    }\r\n\r\n    openQuestion(e){\r\n\r\n    }\r\n    \r\n    render() {\r\n        // HTML\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4 style={{color:'#FFF'}}>Welcome, Here are questions</h4>\r\n                </div>\r\n                <div className=\"add_question\">Create new Question</div>\r\n                <div className=\"question_list\">\r\n                    {\r\n                        this.state.questions.map((question, index)=>{\r\n                            return <div key={index}><h4>{ question.title }</h4><button question-id={question.id} onClick={this.openQuestion}>Open</button></div>\r\n                        })\r\n                    }\r\n                    {\r\n                        this.state.questions.length == 0 ? <span>No Questions avaliable</span> : <></>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}