{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Liu\\\\frontend\\\\app\\\\src\\\\pages\\\\dashboard.js\";\nimport React, { createRef, forwardRef } from \"react\";\nimport API from \"./../service/api\";\nimport HeaderComponent from './../components/header';\nimport './dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n    this.createQuestion = this.createQuestion.bind(this);\n    this.openQuestion = this.openQuestion.bind(this);\n  }\n\n  async componentDidMount() {\n    let result = await API.question.list();\n    let questions = result['questions'];\n    this.setState({ ...this.state,\n      questions: questions\n    });\n  }\n\n  createQuestion() {\n    window.location.href = \"/new\";\n  }\n\n  openQuestion(e) {}\n\n  render() {\n    // HTML\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-new-question\",\n        onClick: this.createQuestion,\n        children: \"Create new Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), this.state.questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: this.state.questions.map((question, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            \"question-id\": question.id,\n            onClick: this.openQuestion,\n            children: question.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-questions\",\n        children: \"No questions have been uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/Liu/frontend/app/src/pages/dashboard.js"],"names":["React","createRef","forwardRef","API","HeaderComponent","DashboardPage","Component","constructor","props","state","questions","createQuestion","bind","openQuestion","componentDidMount","result","question","list","setState","window","location","href","e","render","length","map","index","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AAEA,OAAO,iBAAP;;;AAEA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEsB,QAAjBE,iBAAiB,GAAE;AACrB,QAAIC,MAAM,GAAG,MAAMZ,GAAG,CAACa,QAAJ,CAAaC,IAAb,EAAnB;AACA,QAAIP,SAAS,GAAGK,MAAM,CAAC,WAAD,CAAtB;AACA,SAAKG,QAAL,CAAc,EACV,GAAG,KAAKT,KADE;AAEVC,MAAAA,SAAS,EAAEA;AAFD,KAAd;AAIH;;AAEDC,EAAAA,cAAc,GAAE;AACZQ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAAvB;AACH;;AAEDR,EAAAA,YAAY,CAACS,CAAD,EAAG,CAEd;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,8BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKZ,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIQ,KAAKF,KAAL,CAAWC,SAAX,CAAqBc,MAArB,GAA8B,CAA9B,gBACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAEQ,KAAKf,KAAL,CAAWC,SAAX,CAAqBe,GAArB,CAAyB,CAACT,QAAD,EAAWU,KAAX,KAAmB;AACxC,8BACI;AAAiB,2BAAaV,QAAQ,CAACW,EAAvC;AAA2C,YAAA,OAAO,EAAE,KAAKd,YAAzD;AAAA,sBAAwEG,QAAQ,CAACY;AAAjF,aAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJD;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,gBAUE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdV;AAAA,oBADJ;AAmBD;;AAjDoD","sourcesContent":["import React, { createRef, forwardRef } from \"react\";\r\n\r\nimport API from \"./../service/api\";\r\nimport HeaderComponent from './../components/header';\r\n\r\nimport './dashboard.css';\r\n\r\nexport default class DashboardPage extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          questions: []\r\n      };\r\n\r\n      this.createQuestion = this.createQuestion.bind(this);\r\n      this.openQuestion = this.openQuestion.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let result = await API.question.list();\r\n        let questions = result['questions'];\r\n        this.setState({\r\n            ...this.state,\r\n            questions: questions\r\n        });\r\n    }\r\n\r\n    createQuestion(){\r\n        window.location.href = \"/new\";\r\n    }\r\n\r\n    openQuestion(e){\r\n\r\n    }\r\n    \r\n    render() {\r\n        // HTML\r\n        return (\r\n            <>  \r\n                <HeaderComponent></HeaderComponent>\r\n                <button className=\"open-new-question\" onClick={this.createQuestion}>Create new Question</button>\r\n                {\r\n                    this.state.questions.length > 0 ?\r\n                        <div className=\"questions-list\">\r\n                            {\r\n                                this.state.questions.map((question, index)=>{\r\n                                    return (\r\n                                        <div key={index} question-id={question.id} onClick={this.openQuestion}>{question.title}</div>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </div>\r\n                    : <span className=\"no-questions\">No questions have been uploaded</span>\r\n                }\r\n            </>\r\n        );\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}